// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getComponentCss() should return correct css for size: inherit, color: inherit and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  height: inherit;
}"
`;

exports[`getComponentCss() should return correct css for size: inherit, color: inherit and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  height: inherit;
}"
`;

exports[`getComponentCss() should return correct css for size: inherit, color: primary and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(97%) sepia(55%) saturate(2840%) hue-rotate(180deg) brightness(114%) contrast(103%);
  height: inherit;
}"
`;

exports[`getComponentCss() should return correct css for size: inherit, color: primary and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(3%) sepia(7%) saturate(2930%) hue-rotate(188deg) brightness(91%) contrast(103%);
  height: inherit;
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-high and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(68%) sepia(6%) saturate(108%) hue-rotate(187deg) brightness(104%) contrast(88%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-high and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(40%) sepia(2%) saturate(686%) hue-rotate(187deg) brightness(80%) contrast(94%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-low and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(20%) sepia(7%) saturate(421%) hue-rotate(202deg) brightness(97%) contrast(82%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-low and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(93%) sepia(11%) saturate(36%) hue-rotate(201deg) brightness(89%) contrast(102%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-medium and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(54%) sepia(4%) saturate(229%) hue-rotate(187deg) brightness(91%) contrast(84%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: contrast-medium and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(65%) sepia(6%) saturate(119%) hue-rotate(187deg) brightness(90%) contrast(92%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: inherit and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: inherit and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: primary and theme: dark 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(97%) sepia(55%) saturate(2840%) hue-rotate(180deg) brightness(114%) contrast(103%);
}"
`;

exports[`getComponentCss() should return correct css for size: small, color: primary and theme: light 1`] = `
":host {
  display: block;
}
:host([hidden]) {
  display: none !important;
}
img {
  display: block;
  pointer-events: none;
  filter: invert(3%) sepia(7%) saturate(2930%) hue-rotate(188deg) brightness(91%) contrast(103%);
}"
`;
