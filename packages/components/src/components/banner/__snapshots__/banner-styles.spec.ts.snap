// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getComponentCss() should return correct css 1`] = `
":host {
  opacity: 0;
  --p-banner-position-top: 56px !important;
  --p-banner-position-bottom: 56px !important;
  position: fixed !important;
  top: auto !important;
  bottom: var(--p-banner-position-bottom) !important;
  left: max(22px, 10.625vw - 12px) !important;
  right: max(22px, 10.625vw - 12px) !important;
  margin: 0 !important;
  padding: 0 !important;
  width: auto !important;
  z-index: var(--p-internal-banner-z-index,99) !important;
  will-change: opacity,transform !important;
  filter: drop-shadow(0px 8px 40px rgba(0, 0, 0, 0.16)) !important;
}
:host([hidden]) {
  display: none !important;
}
@keyframes mobileIn {
  from {
    opacity: 0;
    transform: translate3d(0,calc(var(--p-banner-position-bottom) + 100%),0);
  }
  to {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
}
@keyframes mobileOut {
  from {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
  to {
    opacity: 0;
    transform: translate3d(0,calc(var(--p-banner-position-bottom) + 100%),0);
  }
}
@keyframes desktopIn {
  from {
    opacity: 0;
    transform: translate3d(0,calc(-100% - var(--p-banner-position-top)),0);
  }
  to {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
}
@keyframes desktopOut {
  from {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
  to {
    opacity: 0;
    transform: translate3d(0,calc(-100% - var(--p-banner-position-top)),0);
  }
}
@media(min-width:0px) and (max-width:759px) {
    :host(.banner--close) {
      animation: 600ms mobileOut cubic-bezier(0.5,1,0.89,1) forwards !important;
    }
    :host(.hydrated), :host(.ssr) {
      animation: var(--p-animation-duration,600ms) mobileIn cubic-bezier(0.45,0,0.55,1) forwards;
    }
}

@media(min-width:760px) {
    :host {
      top: var(--p-banner-position-top) !important;
      bottom: auto !important;
      left: calc(calc(5vw - 16px) + (clamp(16px, 1.25vw + 12px, 36px) + calc((100vw - calc(5vw - 16px) * 2 - clamp(16px, 1.25vw + 12px, 36px) * 15) / 16)) * 1) !important;
      right: calc(calc(5vw - 16px) + (clamp(16px, 1.25vw + 12px, 36px) + calc((100vw - calc(5vw - 16px) * 2 - clamp(16px, 1.25vw + 12px, 36px) * 15) / 16)) * 1) !important;
    }
    :host(.banner--close) {
      animation: 600ms desktopOut cubic-bezier(0.5,1,0.89,1) forwards !important;
    }
    :host(.hydrated), :host(.ssr) {
      animation: var(--p-animation-duration,600ms) desktopIn cubic-bezier(0.45,0,0.55,1) forwards;
    }
}

@media(min-width:1920px) {
    :host {
      left: calc(max(0px, 50vw - 2560px / 2) + min(50vw - 880px, 400px) + (clamp(16px, 1.25vw + 12px, 36px) + calc((min(100vw, 2560px) - min(50vw - 880px, 400px) * 2 - clamp(16px, 1.25vw + 12px, 36px) * 15) / 16)) * 1) !important;
      right: calc(max(0px, 50vw - 2560px / 2) + min(50vw - 880px, 400px) + (clamp(16px, 1.25vw + 12px, 36px) + calc((min(100vw, 2560px) - min(50vw - 880px, 400px) * 2 - clamp(16px, 1.25vw + 12px, 36px) * 15) / 16)) * 1) !important;
    }
}
"
`;
